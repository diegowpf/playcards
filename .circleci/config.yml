# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  repos:
    docker:
      # specify the version you desire here
      - image: carlyledavis/bytecubed-circle-ci

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

   #  working_directory: ./server

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - run: |
         echo "Deploying"
         cd config
         terraform init
         terraform apply --target module.ecr --auto-approve
  build:
    docker:
      # specify the version you desire here
      - image: carlyledavis/bytecubed-circle-ci-mvn

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

   #  working_directory: ./server

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - setup_remote_docker
      - checkout
      - run: |
         cd config
         ./build-platform.sh
         docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
         ./tag-push.sh
         ./push-images.sh
      # - run: cd client && ./build-container.sh
  deploy:
    docker:
      # specify the version you desire here
      - image: carlyledavis/bytecubed-circle-ci

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

   #  working_directory: ./server

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout
      - run: |
         echo "Deploying"
         cd config
         terraform init
         export TF_VAR_version=$CIRCLE_BUILD_NUM
         terraform apply --target module.ecr --auto-approve
         terraform apply --auto-approve
workflows:
  version: 2
  build_server:
    jobs:
      - repos
      - build:
          requires:
            - repos
          filters:
              branches:
                only: master
      - deploy:
          requires:
            - build
          filters:
              branches:
                only: master
